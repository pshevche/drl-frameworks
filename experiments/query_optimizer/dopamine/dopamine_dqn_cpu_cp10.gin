# Hyperparameters for a simple DQN-style Cartpole agent. The hyperparameters
# chosen achieve reasonable performance.
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.agents.dqn.dqn_agent
import dopamine.replay_memory.circular_replay_buffer
import gin.tf.external_configurables
import drl_fw.dopamine.components.park_networks

ParametricDQNAgent.observation_shape = (1681,)
# ParametricDQNAgent.observation_dtype = %gym_lib.CARTPOLE_OBSERVATION_DTYPE
# ParametricDQNAgent.stack_size = %gym_lib.CARTPOLE_STACK_SIZE
ParametricDQNAgent.network = @park_networks.qopt_dqn_network
ParametricDQNAgent.gamma = 0.99
ParametricDQNAgent.update_horizon = 1
ParametricDQNAgent.min_replay_history = 1000
ParametricDQNAgent.update_period = 1
ParametricDQNAgent.target_update_period = 100
ParametricDQNAgent.epsilon_fn = @dqn_agent.identity_epsilon
ParametricDQNAgent.tf_device = '/cpu:*'  # use '/cpu:*' for non-GPU version
ParametricDQNAgent.optimizer = @tf.train.AdamOptimizer()

tf.train.AdamOptimizer.learning_rate = 0.0001
tf.train.AdamOptimizer.epsilon = 0.0003125

create_gym_environment.environment_name = 'ParkQOptEnv'
create_gym_environment.version = 'v0'
create_parametric_agent.agent_name = 'parametric_dqn'
CheckpointRunner.create_environment_fn = @gym_lib.create_gym_environment
CheckpointRunner.num_iterations = 1000
CheckpointRunner.training_steps = 300
CheckpointRunner.evaluation_steps = 500
CheckpointRunner.max_steps_per_episode = 25  # Default max episode length.
CheckpointRunner.checkpoint_freq = 10  # Checkpointing frequency.

WrappedReplayBuffer.replay_capacity = 50000
WrappedReplayBuffer.batch_size = 128
